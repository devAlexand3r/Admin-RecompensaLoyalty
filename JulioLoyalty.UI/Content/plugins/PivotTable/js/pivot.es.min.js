(function () { var e; (e = function (e) { return "object" == typeof exports && "object" == typeof module ? e(require("jquery")) : "function" == typeof define && define.amd ? define(["jquery"], e) : e(jQuery) })(function (e) { var a, r, t, i, o; return i = e.pivotUtilities.numberFormat, o = e.pivotUtilities.aggregatorTemplates, a = i({ thousandsSep: " ", decimalSep: "," }), r = i({ digitsAfterDecimal: 0, thousandsSep: " ", decimalSep: "," }), t = i({ digitsAfterDecimal: 1, scaler: 100, suffix: "%", thousandsSep: " ", decimalSep: "," }), e.pivotUtilities.locales.es = { localeStrings: { renderError: "OcurriÃ³ un error durante la interpretaciÃ³n de la tabla dinÃ¡mica.", computeError: "OcurriÃ³ un error durante el cÃ¡lculo de la tabla dinÃ¡mica.", uiRenderError: "OcurriÃ³ un error durante el dibujado de la tabla dinÃ¡mica.", selectAll: "Seleccionar todo", selectNone: "Deseleccionar todo", tooMany: "(demasiados valores)", filterResults: "Filtrar resultados", totals: "Totales", vs: "vs", by: "por", apply: "Aplicar", cancel: "Cancelar" }, aggregators: { Cuenta: o.count(r), "Cuenta de valores Ãºnicos": o.countUnique(r), "Lista de valores Ãºnicos": o.listUnique(", "), Suma: o.sum(a), "Suma de enteros": o.sum(r), Promedio: o.average(a), Mediana: o.median(a), Diferencia: o["var"](1, a), "DesviaciÃ³n estÃ¡ndar de la muestra": o.stdev(1, a), "MÃ­nimo": o.min(a), "MÃ¡ximo": o.max(a), Primero: o.first(a), Pasado: o.last(a), "Suma de sumas": o.sumOverSum(a), "Cota 80% superior": o.sumOverSumBound80(!0, a), "Cota 80% inferior": o.sumOverSumBound80(!1, a), "ProporciÃ³n del total (suma)": o.fractionOf(o.sum(), "total", t), "ProporciÃ³n de la fila (suma)": o.fractionOf(o.sum(), "row", t), "ProporciÃ³n de la columna (suma)": o.fractionOf(o.sum(), "col", t), "ProporciÃ³n del total (cuenta)": o.fractionOf(o.count(), "total", t), "ProporciÃ³n de la fila (cuenta)": o.fractionOf(o.count(), "row", t), "ProporciÃ³n de la columna (cuenta)": o.fractionOf(o.count(), "col", t) }, renderers: { Tabla: e.pivotUtilities.renderers.Table, "Tabla con barras": e.pivotUtilities.renderers["Table Barchart"], Heatmap: e.pivotUtilities.renderers.Heatmap, "Heatmap por filas": e.pivotUtilities.renderers["Row Heatmap"], "Heatmap por columnas": e.pivotUtilities.renderers["Col Heatmap"] } } }) }).call(this);
//# sourceMappingURL=pivot.es.min.js.map